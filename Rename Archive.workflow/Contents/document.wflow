<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>381</string>
	<key>AMApplicationVersion</key>
	<string>2.4</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.3</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>Run Shell Script</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string>import os
import sys
import zipfile

def get_zip_directory_names(filename):
    """Gets the list of directories inside a ZIP archive

		Reads the directory names inside of a ZIP archive, and returns a list of
		each directory name (without its parent directories).

		@param filename: A string that can be a relative filename or file path (it
			doesn't matter as long as this script can read it) of a ZIP file
		@returns: a list of directory name strings
	"""
    names = list()
    try:
        with zipfile.ZipFile(filename, 'r') as zip_file:
            names = [fname for fname in zip_file.namelist()
                     if fname.endswith('/')]
    except zipfile.BadZipfile as e:
        return []
    directory_names = [os.path.basename(dir_name[:-1]) for dir_name in names]
    return directory_names

if __name__ == "__main__":
	# we only care about the first file
	archive_filename = sys.argv[1]
	print archive_filename
	print "\n".join(get_zip_directory_names(archive_filename))</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>1</integer>
					<key>shell</key>
					<string>/usr/bin/python</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.3</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>InputUUID</key>
				<string>92FFFD56-B445-4DD9-9EE5-EBE9823DB961</string>
				<key>Keywords</key>
				<array>
					<string>Shell</string>
					<string>Script</string>
					<string>Command</string>
					<string>Run</string>
					<string>Unix</string>
				</array>
				<key>OutputUUID</key>
				<string>C122586B-0C61-442F-BDCF-7EF90C61F867</string>
				<key>UUID</key>
				<string>C4850BB6-62D4-4F39-9172-27723A2A22E3</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>449.500000:960.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/English.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>-- For files that aren't archives or that don't have any directory names, the input is a 2-item list:--	1. the path of the first selected item--	2. null string-- For files that do have directory names, the first item is the path of the selected item, and the rest of the elements are the directory names within that archive.on run {input, parameters}	set archivePath to item 1 of input	set archiveName to basename(archivePath)		if (count of input) is 2 and length of (item 2 of input) is 0 then		display alert "No Directories Found"¬
			message archiveName &amp; " was not a supported archive type or did not have any directory names."		return	end if		set directoryNames to items 2 thru -1 of input		set newNames to choose from list directoryNames ¬		with title ¬		"Rename Archive" with prompt "Select a new name for " &amp; archiveName &amp; ¬		":" OK button name "Rename"		if newNames is false then		return	end if	-- We only allow for selection of 1 new name	set newName to item 1 of newNames		set newArchiveName to newName	set extension to filenameExtension(archiveName)	if (count of extension) is not 0 then		set newArchiveName to newArchiveName &amp; "." &amp; extension	end if		set archiveAlias to (POSIX file archivePath as alias)	tell application "Finder"		set the name of archiveAlias to newArchiveName	end tell	returnend runon dirname(filePath)	-- Gets the parent directory of the given file path	return (do shell script "dirname " &amp; quoted form of POSIX path of filePath)end dirnameon basename(filePath)	-- Gets the base name of the given file path	return (do shell script "basename " &amp; quoted form of POSIX path of filePath)end basenameon filenameExtension(filename)	-- Returns just the extension of the filename	set oldDelims to AppleScript's text item delimiters	set AppleScript's text item delimiters to "."	set extension to ""	if filename contains "." then set extension to (text item -1 of filename) as text	set AppleScript's text item delimiters to oldDelims	return extensionend filenameExtension</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>65D66036-DA59-459F-BADD-CEDBA188126B</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>A35D7239-481D-4391-8792-F63A0EFC11D5</string>
				<key>UUID</key>
				<string>7FF8E117-85F4-4FCD-8E3D-08337DC62295</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>449.500000:333.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/English.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict>
		<key>23A8A6FA-2B8C-46B4-A99F-76BF4F3D005D</key>
		<dict>
			<key>from</key>
			<string>C4850BB6-62D4-4F39-9172-27723A2A22E3 - C4850BB6-62D4-4F39-9172-27723A2A22E3</string>
			<key>to</key>
			<string>7FF8E117-85F4-4FCD-8E3D-08337DC62295 - 7FF8E117-85F4-4FCD-8E3D-08337DC62295</string>
		</dict>
	</dict>
	<key>variables</key>
	<array>
		<dict>
			<key>UUID</key>
			<string>6F6F8C91-5FDF-456A-8286-C5167114BB1E</string>
			<key>identifier</key>
			<string>com.apple.Automator.Variable.Storage</string>
			<key>name</key>
			<string>New Archive Name</string>
		</dict>
	</array>
	<key>workflowMetaData</key>
	<dict>
		<key>serviceApplicationBundleID</key>
		<string>com.apple.finder</string>
		<key>serviceApplicationPath</key>
		<string>/System/Library/CoreServices/Finder.app</string>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.fileSystemObject</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
